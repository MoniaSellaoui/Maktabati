// <auto-generated />
using System;
using Maktabati.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Maktabati.Data.Migrations
{
    [DbContext(typeof(BibliothequeContext))]
    partial class BibliothequeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("Maktabati.Data.Entities.Emprunt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateEmprunt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateRetourEffective")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateRetourPrevue")
                        .HasColumnType("TEXT");

                    b.Property<int>("LivreId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MembreId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LivreId");

                    b.HasIndex("MembreId");

                    b.ToTable("Emprunts");
                });

            modelBuilder.Entity("Maktabati.Data.Entities.Livre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Auteur")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Livres");
                });

            modelBuilder.Entity("Maktabati.Data.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateEnvoi")
                        .HasColumnType("TEXT");

                    b.Property<int>("MembreId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MembreId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Maktabati.Data.Entities.Penalite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmpruntId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EstPayee")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Montant")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("EmpruntId")
                        .IsUnique();

                    b.ToTable("Penalites");
                });

            modelBuilder.Entity("Maktabati.Data.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateReservation")
                        .HasColumnType("TEXT");

                    b.Property<int>("LivreId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MembreId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LivreId");

                    b.HasIndex("MembreId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Maktabati.Data.Entities.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeUtilisateur")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Utilisateurs");

                    b.HasDiscriminator<string>("TypeUtilisateur").HasValue("Utilisateur");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Maktabati.Data.Entities.Administrateur", b =>
                {
                    b.HasBaseType("Maktabati.Data.Entities.Utilisateur");

                    b.HasDiscriminator().HasValue("Administrateur");
                });

            modelBuilder.Entity("Maktabati.Data.Entities.Membre", b =>
                {
                    b.HasBaseType("Maktabati.Data.Entities.Utilisateur");

                    b.Property<bool>("AbonnementActif")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Membre");
                });

            modelBuilder.Entity("Maktabati.Data.Entities.Emprunt", b =>
                {
                    b.HasOne("Maktabati.Data.Entities.Livre", "Livre")
                        .WithMany("Emprunts")
                        .HasForeignKey("LivreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Maktabati.Data.Entities.Membre", "Membre")
                        .WithMany("Emprunts")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Livre");

                    b.Navigation("Membre");
                });

            modelBuilder.Entity("Maktabati.Data.Entities.Notification", b =>
                {
                    b.HasOne("Maktabati.Data.Entities.Membre", "Membre")
                        .WithMany("Notifications")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membre");
                });

            modelBuilder.Entity("Maktabati.Data.Entities.Penalite", b =>
                {
                    b.HasOne("Maktabati.Data.Entities.Emprunt", "Emprunt")
                        .WithOne("Penalite")
                        .HasForeignKey("Maktabati.Data.Entities.Penalite", "EmpruntId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emprunt");
                });

            modelBuilder.Entity("Maktabati.Data.Entities.Reservation", b =>
                {
                    b.HasOne("Maktabati.Data.Entities.Livre", "Livre")
                        .WithMany("Reservations")
                        .HasForeignKey("LivreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Maktabati.Data.Entities.Membre", "Membre")
                        .WithMany("Reservations")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Livre");

                    b.Navigation("Membre");
                });

            modelBuilder.Entity("Maktabati.Data.Entities.Emprunt", b =>
                {
                    b.Navigation("Penalite");
                });

            modelBuilder.Entity("Maktabati.Data.Entities.Livre", b =>
                {
                    b.Navigation("Emprunts");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Maktabati.Data.Entities.Membre", b =>
                {
                    b.Navigation("Emprunts");

                    b.Navigation("Notifications");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
